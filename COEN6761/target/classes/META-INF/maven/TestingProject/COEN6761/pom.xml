<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>TestingProject</groupId>
  <artifactId>COEN6761</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>COEN6761</name>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.release>11</maven.compiler.release>
    <junit.version>5.3.1</junit.version>
    <pitest.version>1.4.3</pitest.version>
  </properties>

  <dependencies>
    <!-- JUnit Jupiter API for testing -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>5.9.3</version>
      <scope>test</scope>
    </dependency>

    <!-- JUnit Jupiter Params for parameterized tests -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <version>5.9.3</version>
      <scope>test</scope>
    </dependency>

    <!-- JUnit Jupiter Engine to run tests -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>5.9.3</version>
      <scope>test</scope>
    </dependency>

    <!-- JUnit Platform Runner -->
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-runner</artifactId>
      <version>1.9.3</version>
      <scope>test</scope>
    </dependency>
  </dependencies>



  <build>
    <plugins>
      <!-- Surefire Plugin to run unit tests -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.0.0-M1</version>
        <configuration>
          <argLine>${surefireArgLine}</argLine> <!-- This is the missing piece -->
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>test</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- JaCoCo Plugin for Code Coverage -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.8</version>
        <executions>
          <execution>
            <id>default-prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <destFile>${project.build.directory}/coverage-reports/jacoco.exec</destFile>
              <propertyName>surefireArgLine</propertyName>
            </configuration>
          </execution>
          <execution>
            <id>default-report</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <dataFile>${project.build.directory}/coverage-reports/jacoco.exec</dataFile>
              <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
            </configuration>
          </execution>
          <execution>
            <id>default-check</id>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <rules>
                <!-- Statement Coverage -->
                <rule>
                  <element>CLASS</element>
                  <limits>
                    <limit>
                      <counter>LINE</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>0.50</minimum> <!-- Minimum 50% statement coverage -->
                    </limit>
                  </limits>
                </rule>
                <!-- Decision Coverage -->
                <rule>
                  <element>CLASS</element>
                  <limits>
                    <limit>
                      <counter>BRANCH</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>0.50</minimum> <!-- Minimum 50% decision coverage -->
                    </limit>
                  </limits>
                </rule>
                <!-- Condition Coverage -->
                <rule>
                  <element>CLASS</element>
                  <limits>
                    <limit>
                      <counter>CONDITIONAL</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>0.50</minimum> <!-- Minimum 50% condition coverage -->
                    </limit>
                  </limits>
                </rule>
                <!-- Multiple Condition Coverage -->
                <rule>
                  <element>CLASS</element>
                  <limits>
                    <limit>
                      <counter>MULTI_BRANCH</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>0.50</minimum> <!-- Minimum 50% multiple condition coverage -->
                    </limit>
                  </limits>
                </rule>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- PIT Mutation Testing Plugin -->
      <plugin>
        <groupId>org.pitest</groupId>
        <artifactId>pitest-maven</artifactId>
        <version>${pitest.version}</version>
        <dependencies>
          <dependency>
            <groupId>org.pitest</groupId>
            <artifactId>pitest-junit5-plugin</artifactId>
            <version>0.8</version>
          </dependency>
        </dependencies>
        <configuration>
          <!-- Mutation testing for specific function -->
          <targetClasses>
            <param>TestingProject.COEN6761.*</param> <!-- Change this to target your classes -->
          </targetClasses>
          <targetTests>
            <param>TestingProject.COEN6761.*MainTest</param>
            <param>TestingProject.COEN6761.*sourceTest</param>  <!-- Your test classes -->
          </targetTests>
          <mutators>
            <mutator>ALL</mutator>
          </mutators>
          <outputFormats>
            <outputFormat>HTML</outputFormat>
          </outputFormats>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
